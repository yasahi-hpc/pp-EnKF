if(BACKEND STREQUAL "CUDA")
    # NVIDIA GPU (compiler AdaptiveCpp: with nvhpc backend)
    target_compile_definitions(math_lib INTERFACE ENABLE_CUDA)
    target_compile_options(math_lib INTERFACE -O3 -cudalib=cufft,cublas,curand,cusolver)
elseif(BACKEND STREQUAL "HIP")
    # AMD GPU (compiler AdaptiveCpp: with hipcc backend)
    find_package(rocthrust REQUIRED)
    find_package(rocfft REQUIRED)
    find_package(rocblas REQUIRED)
    find_package(rocsolver REQUIRED)
    find_package(rocrand REQUIRED)
    target_link_libraries(math_lib INTERFACE hip::device roc::rocfft roc::rocblas roc::rocsolver roc::rocrand)
    target_compile_definitions(math_lib INTERFACE ENABLE_HIP)
elseif(BACKEND STREQUAL "SYCL")
    # Intel GPU (compile dpcpp)
    find_package(MKL REQUIRED COMPONENTS SYCL)
    target_link_libraries(math_lib INTERFACE MKL::MKL_SYCL)
elseif(BACKEND STREQUAL "OPENMP")
    find_package(OpenMP REQUIRED)
    find_package(FFTW REQUIRED COMPONENTS DOUBLE_LIB)
    target_link_libraries(math_lib INTERFACE OpenMP::OpenMP_CXX fftw3 eigen)
    target_compile_definitions(math_lib INTERFACE ENABLE_OPENMP ENABLE_STDPAR)
    target_compile_options(math_lib INTERFACE -O3)
    if(${CMAKE_CXX_COMPILER_ID} STREQUAL NVHPC)
        # with NVHPC, Eigen warns a lot. Need to suppress warnings in order to perform build testing on github.
        target_compile_options(math_lib INTERFACE --diag_suppress=subscript_out_of_range,integer_sign_change,incompatible_vectors_conversion,code_is_unreachable)
    endif()
else()
    message(FATAL_ERROR "No parallel backend specified. One of CUDA, and OPENMP must be On.")
endif()

# Compiler versions
target_compile_definitions(math_lib INTERFACE ENABLE_SYCL)
target_link_libraries(math_lib INTERFACE std::mdspan)
target_compile_features(math_lib INTERFACE cxx_std_20)