add_executable(heat3d-thrust heat3D.cpp)

set(BACKEND AUTO CACHE STRING "CHOICE OF PARALLEL BACKEND")
if(BACKEND STREQUAL "CUDA")
    target_link_libraries(heat3d-thrust PUBLIC Threads::Threads STDEXEC::stdexec STDEXEC::nvexec)
    target_compile_features(heat3d-thrust PUBLIC cxx_std_20)
elseif(BACKEND STREQUAL "OPENMP")
    find_package(OpenMP REQUIRED)
    target_link_libraries(heat3d-thrust PUBLIC Threads::Threads STDEXEC::stdexec STDEXEC::nvexec OpenMP::OpenMP_CXX)
    target_compile_features(heat3d-thrust PUBLIC cxx_std_20)
    target_compile_definitions(heat3d-thrust PUBLIC ENABLE_OPENMP THRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_OMP)
    if(${CMAKE_CXX_COMPILER_ID} STREQUAL NVHPC)
        target_compile_options(heat3d-thrust PUBLIC -fast)
    endif()
elseif(BACKEND STREQUAL "HIP")
    enable_language(HIP)
    target_compile_features(heat3d-thrust PUBLIC cxx_std_17)
    target_compile_options(heat3d-thrust PUBLIC -std=c++1z)
    set_source_files_properties(heat3D.cpp PROPERTIES LANGUAGE HIP)
else()
    message(FATAL_ERROR "No parallel backend specified. One of CUDA, HIP and OPENMP must be On.")
endif()

target_link_libraries(heat3d-thrust PUBLIC std::mdspan)
