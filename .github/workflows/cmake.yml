name: CMake

on:
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMAKE_CXX_COMPILER: nvc++

jobs:

  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Update submodules
      run: git submodule update --remote --recursive
      
    - name: Build docker
      run: docker build -t nvidia_hpc_sdk_env docker

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: docker run -v ${{github.workspace}}:/work nvidia_hpc_sdk_env cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=${{env.CMAKE_CXX_COMPILER}}

    - name: Build
      # Build your program with the given configuration
      run: docker run -v ${{github.workspace}}:/work nvidia_hpc_sdk_env cmake --build build --config ${{env.BUILD_TYPE}} -- VERBOSE=1
      #run: docker run -v ${{github.workspace}}:/work nvidia_hpc_sdk_env cmake --build build --config ${{env.BUILD_TYPE}} -- VERBOSE=1 -j 8
